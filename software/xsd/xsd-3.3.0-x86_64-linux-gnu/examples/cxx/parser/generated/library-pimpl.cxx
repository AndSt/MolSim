// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#include "library-pimpl.hxx"

#include <iostream>

namespace library
{
  // isbn_pimpl
  //

  void isbn_pimpl::
  pre ()
  {
  }

  void isbn_pimpl::
  post_isbn ()
  {
    unsigned int v (post_unsigned_int ());

    std::cout << "isbn: " << v << std::endl;
  }

  // title_pimpl
  //

  void title_pimpl::
  pre ()
  {
  }

  void title_pimpl::
  lang (const ::std::string& lang)
  {
    std::cout << "lang: " << lang << std::endl;
  }

  void title_pimpl::
  post_title ()
  {
    const ::std::string& v (post_string ());

    std::cout << "title: " << v << std::endl;
  }

  // genre_pimpl
  //

  void genre_pimpl::
  pre ()
  {
  }

  void genre_pimpl::
  post_genre ()
  {
    const ::std::string& v (post_string ());

    std::cout << "genre: " << v << std::endl;
  }

  // person_pimpl
  //

  void person_pimpl::
  pre ()
  {
  }

  void person_pimpl::
  name (const ::std::string& name)
  {
    std::cout << "name: " << name << std::endl;
  }

  void person_pimpl::
  born (const ::std::string& born)
  {
    std::cout << "born: " << born << std::endl;
  }

  void person_pimpl::
  died (const ::std::string& died)
  {
    std::cout << "died: " << died << std::endl;
  }

  void person_pimpl::
  post_person ()
  {
  }

  // author_pimpl
  //

  void author_pimpl::
  pre ()
  {
  }

  void author_pimpl::
  recommends (const ::std::string& recommends)
  {
    std::cout << "recommends: " << recommends << std::endl;
  }

  void author_pimpl::
  post_author ()
  {
    post_person ();
  }

  // book_pimpl
  //

  void book_pimpl::
  pre ()
  {
  }

  void book_pimpl::
  isbn ()
  {
  }

  void book_pimpl::
  title ()
  {
  }

  void book_pimpl::
  genre ()
  {
  }

  void book_pimpl::
  author ()
  {
  }

  void book_pimpl::
  available (bool available)
  {
    std::cout << "available: " << available << std::endl;
  }

  void book_pimpl::
  id (const ::std::string& id)
  {
    std::cout << "id: " << id << std::endl;
  }

  void book_pimpl::
  post_book ()
  {
  }

  // catalog_pimpl
  //

  void catalog_pimpl::
  pre ()
  {
  }

  void catalog_pimpl::
  book ()
  {
  }

  void catalog_pimpl::
  post_catalog ()
  {
  }
}

