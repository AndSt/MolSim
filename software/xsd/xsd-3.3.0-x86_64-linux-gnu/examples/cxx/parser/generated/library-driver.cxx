// Not copyrighted - public domain.
//
// This sample parser implementation was generated by CodeSynthesis XSD,
// an XML Schema to C++ data binding compiler. You may use it in your
// programs without any restrictions.
//

#include "library-pimpl.hxx"

#include <iostream>

int
main (int argc, char* argv[])
{
  if (argc != 2)
  {
    std::cerr << "usage: " << argv[0] << " file.xml" << std::endl;
    return 1;
  }

  try
  {
    // Instantiate individual parsers.
    //
    ::library::catalog_pimpl catalog_p;
    ::library::book_pimpl book_p;
    ::library::isbn_pimpl isbn_p;
    ::library::title_pimpl title_p;
    ::xml_schema::string_pimpl string_p;
    ::library::genre_pimpl genre_p;
    ::library::author_pimpl author_p;
    ::xml_schema::idref_pimpl idref_p;
    ::xml_schema::boolean_pimpl boolean_p;
    ::xml_schema::id_pimpl id_p;

    // Connect the parsers together.
    //
    catalog_p.parsers (book_p);

    book_p.parsers (isbn_p,
                    title_p,
                    genre_p,
                    author_p,
                    boolean_p,
                    id_p);

    title_p.parsers (string_p);

    author_p.parsers (string_p,
                      string_p,
                      string_p,
                      idref_p);

    // Parse the XML document.
    //
    ::xml_schema::document doc_p (
      catalog_p,
      "http://www.codesynthesis.com/library",
      "catalog");

    catalog_p.pre ();
    doc_p.parse (argv[1]);
    catalog_p.post_catalog ();
  }
  catch (const ::xml_schema::exception& e)
  {
    std::cerr << e << std::endl;
    return 1;
  }
  catch (const std::ios_base::failure&)
  {
    std::cerr << argv[1] << ": error: io failure" << std::endl;
    return 1;
  }
}

